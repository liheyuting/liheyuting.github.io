<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>虚妄之城</title>
  
  <subtitle>愚钝拙言，闲逛人间</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-24T13:51:36.027Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Dora Li</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/06/24/2019/Work%20content/"/>
    <id>http://yoursite.com/2019/06/24/2019/Work content/</id>
    <published>2019-06-24T13:51:36.027Z</published>
    <updated>2019-06-24T13:51:36.027Z</updated>
    
    <content type="html"><![CDATA[<p>##### 制作全年线上推广计划以及监督执行 </p><p>##### 多渠道线上市场推广 </p><p>##### 跟踪和评估线上推广各渠道的表现效果，进行效果分析和优化 </p><p>##### 和多部门合作，负责 </p><p>##### Social 内容及运营 </p><p>##### 数据分析 </p><p>- Make yearly online marketing plan and execution </p><p>- Lead multi-channel digital lead generation（including marketing automation, Social media, SEO,and retargeting ads, etc) and manage content design, customer data analysis and test plan </p><p>- Analyze customer behavior across the entire user life-cycle and deploy customized e-marketing campaign to improve customer experience and increase conversion </p><p>- Lead muti-channel e-marketing campaign(including SE.com website, Social Media, SEM, SEO, Email nurturing, Virtual event and online seminar, etc) </p><p>- Track program results, and analyze data and insights to optimise digital marketing program </p><p>- Standardize campaign data collection and integration rule </p><p>- Cooperate with cross functional teams </p><p>- multiple Vendors management </p><p>- Budget management </p><p>- 制作全年市场推广计划和执行 </p><p>- 负责多渠道数字化lead generation运营（包含营销自动化，社交媒体，SEO和重定向广告等），内容撰写，用户数据分析和执行test计划 </p><p>- 通过分析全生命周期的用户行为，定制化制定市场推广活动，以优化用户体验以及促进用户转化 </p><p>- 领导多渠道e-marketing的市场推广活动（包含施耐德电气官网，社交媒体，SEM/SEO，eDM 培育，线下会议和线上会议等 </p><p>- 跟踪，分析，总结市场推广效果及其他专项分析 </p><p>- 收集数据，建立标准化的数据整合规则，优化流程，为业务提供支持和优化方向 </p><p>- 跨部门协作 </p><p>- 多供应商管理 </p><p>- 费用管理 </p><p>微码邓白氏 </p><p>Social media ecosystem operation </p><p>- Lead Wechat minisites platform setup </p><p>- manage social media operation(including wechat, weibo, SCRM, WeChat minisites, etc) , content design, customer data analysis, and produce regular report </p><p>- manage social followers tag structure and design programs to improve customer experience </p><p>- Lead online campaign, including making plan, time control, execution, content design etc, to achieve the KPI and ROI. </p><p>- work smoothly with other functions teams (learn programming languages with self-study to enhance communication efficiency sharply) </p><p>- Multiple Vendors management </p><p>社交媒体生态圈的运营 </p><p>- 负责多个微信微网站平台搭建 </p><p>- 负责社交媒体的运营（包括微信，微博，Social CRM和多个微网站运营等），文案撰写，用户数据分析和撰写日常运营分析报告 </p><p>- 负责微信粉丝标签体系的管理，制定相关活动增加用户粘性 </p><p>- 负责线上活动的推广，包含方案策划，执行，时间控制和文案撰写等，KPI达到795% </p><p>- 和其他部门高效合作（自学编程语言极大的提高沟通效率） </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;##### 制作全年线上推广计划以及监督执行 &lt;/p&gt;
&lt;p&gt;##### 多渠道线上市场推广 &lt;/p&gt;
&lt;p&gt;##### 跟踪和评估线上推广各渠道的表现效果，进行效果分析和优化 &lt;/p&gt;
&lt;p&gt;##### 和多部门合作，负责 &lt;/p&gt;
&lt;p&gt;##### Social 内容及
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>营销自动化—用户</title>
    <link href="http://yoursite.com/2019/05/28/2019/SMA_User/"/>
    <id>http://yoursite.com/2019/05/28/2019/SMA_User/</id>
    <published>2019-05-27T16:00:00.000Z</published>
    <updated>2019-06-24T16:41:49.522Z</updated>
    
    <content type="html"><![CDATA[<p>留坑待填</p><h3 id="营销自动化"><a href="#营销自动化" class="headerlink" title="营销自动化"></a>营销自动化</h3><ul><li>增加新用户/培育旧用户</li><li><p>为什么邮件营销是被低估的渠道</p><ul><li>成本低、速度快</li><li>投放精准、内容丰富</li><li>主动性强，连续推销</li><li>点对点的私域流量</li><li>异步消息，人群更加精准</li><li>内容质量更高（邮件营销而非垃圾邮件）</li></ul></li><li><p>营销自动化，多渠道触达</p><ul><li>邮件渠道</li><li>微信公众号</li></ul></li></ul><hr><h4 id="用户质量"><a href="#用户质量" class="headerlink" title="用户质量"></a>用户质量</h4><ul><li><p>用户来源的质量分析</p></li><li><p>媒体用户质量分析</p></li><li><p>active or engage用户数字</p></li><li><p>用户质量控制</p></li></ul><h4 id="—"><a href="#—" class="headerlink" title="—"></a>—</h4><h4 id="用户生命周期"><a href="#用户生命周期" class="headerlink" title="用户生命周期"></a>用户生命周期</h4><ul><li>常见的产业生命周期/产品生命周期</li><li>用户生命周期，（循环式上升的生命周期better）</li><li>用户价值<ul><li>举例：RIO &amp; LTV （用户终身价值）</li><li>公司SMA对于revenue的贡献（数据）</li></ul></li></ul><hr><h4 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h4><h4 id="用户分层-对应nurture策略"><a href="#用户分层-对应nurture策略" class="headerlink" title="用户分层+对应nurture策略"></a>用户分层+对应nurture策略</h4><ul><li>用户分层+策略</li><li>用户筛选<ul><li>nurture stream 用户标签筛选+（行为偏好筛选）</li><li>用户阶段性筛选</li></ul></li></ul><hr><h4 id="用户画像"><a href="#用户画像" class="headerlink" title="用户画像"></a>用户画像</h4><ul><li>用户画像完善<ul><li>举例说明用户画像的价值（+用户标签使用）</li><li>SMA现在的情况</li><li>如何完善用户画像</li><li>用户标签</li></ul></li></ul><hr><h4 id="关键群体的用户激活-用户培育"><a href="#关键群体的用户激活-用户培育" class="headerlink" title="关键群体的用户激活/用户培育"></a>关键群体的用户激活/用户培育</h4><ul><li>Person score 0-20分用户 用户激活</li><li>Person score 20 -40分，demographic score/behavior score 二维分析</li><li>Oil&amp;Gas/data center segment nurture</li><li>data center&gt;Person score 75分用户，探索</li></ul><hr><h4 id="从数据看效果"><a href="#从数据看效果" class="headerlink" title="从数据看效果"></a>从数据看效果</h4><ul><li>A/B test <ul><li>小红书的案例</li><li>2018年SMA的A/B test</li></ul></li><li>Key数字：Open rate/  Click rate/ CTO<ul><li>2018年SMA的表现</li><li>从rate看效果</li><li>精准化筛选人群效果分析</li></ul></li></ul><hr><h4 id="Learning-接下来的方向"><a href="#Learning-接下来的方向" class="headerlink" title="Learning + 接下来的方向"></a>Learning + 接下来的方向</h4><ul><li>用户质量控制</li><li>用户行为分析—&gt;丰满用户画像</li><li>用户活跃性评估维度多元化</li><li>用户标签管理：个人信息标签片面式–&gt;综合性标签推送—&gt;标签模糊化，大数据推送</li><li>用户分层营销策略流程化+关键人群用户流程化</li><li>CMS（Content Management System），碎片化内容—&gt;内容系统化管理</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;留坑待填&lt;/p&gt;
&lt;h3 id=&quot;营销自动化&quot;&gt;&lt;a href=&quot;#营销自动化&quot; class=&quot;headerlink&quot; title=&quot;营销自动化&quot;&gt;&lt;/a&gt;营销自动化&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;增加新用户/培育旧用户&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为什么邮件营销是被低估的渠道&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;成本低、速度快&lt;/li&gt;
&lt;li&gt;投放精准、内容丰富&lt;/li&gt;
&lt;li&gt;主动性强，连续推销&lt;/li&gt;
&lt;li&gt;点对点的私域流量&lt;/li&gt;
&lt;li&gt;异步消息，人群更加精准&lt;/li&gt;
&lt;li&gt;内容质量更高（邮件营销而非垃圾邮件）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;营销自动化，多渠道触达&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;邮件渠道&lt;/li&gt;
&lt;li&gt;微信公众号&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&quot;用户质量&quot;&gt;&lt;a href=&quot;#用户质量&quot; class=&quot;headerlink&quot; title=&quot;用户质量&quot;&gt;&lt;/a&gt;用户质量&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;用户来源的质量分析&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;媒体用户质量分析&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;active or engage用户数字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用户质量控制&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink&quot; title=&quot;—&quot;&gt;&lt;/a&gt;—&lt;/h4&gt;&lt;h4 id=&quot;用户生命周期&quot;&gt;&lt;a href=&quot;#用户生命周期&quot; class=&quot;headerlink&quot; title=&quot;用户生命周期&quot;&gt;&lt;/a&gt;用户生命周期&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;常见的产业生命周期/产品生命周期&lt;/li&gt;
&lt;li&gt;用户生命周期，（循环式上升的生命周期better）&lt;/li&gt;
&lt;li&gt;用户价值&lt;ul&gt;
&lt;li&gt;举例：RIO &amp;amp; LTV （用户终身价值）&lt;/li&gt;
&lt;li&gt;公司SMA对于revenue的贡献（数据）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="soft" scheme="http://yoursite.com/tags/soft/"/>
    
  </entry>
  
  <entry>
    <title>在北方生活的第7年</title>
    <link href="http://yoursite.com/2019/05/13/2019/water/"/>
    <id>http://yoursite.com/2019/05/13/2019/water/</id>
    <published>2019-05-12T16:00:00.000Z</published>
    <updated>2019-05-19T02:27:42.136Z</updated>
    
    <content type="html"><![CDATA[<p>清明节和朋友一起去了桂林，又去了广州。路途中本应是畅意游览，竟又品味出了另一种倦怠感，对北方的倦怠感，是的没错，来南方旅行，品味出了北方生活的倦怠感。</p><p>2012年8月末来北京，到现在2019年5月，在这个城市快7年时间了，而似乎也一直像是一条淡水鱼，在大海里辗转游览。</p><p>7年里，除了回家，去南方玩过3次，</p><p>第一次，估摸着应该是大二的五一，去武汉。那时候担任学校某个社团的社长，算是第一次公费出行。那时候还没做过轮渡，看到渡口的轮渡感觉好稀奇，当时有个朋友在武汉，陪着我来来回回坐了好几趟，半夜了我还不想回家，坐在外滩，吹着江风，和着时光吹乱我的头发和心情。现在想来那时候还真是，怎么说呢，有一种年轻人的矜持感，大概就是”我想要但我绝不会说，还要推开你”的深井冰吧…现在的性格里大概还残留了一些，但对自己倒是坦诚了很多，也世俗了很多。风景总是流动着的，回忆留在江风里，就莫名已经很美好了。</p><p>第二次应该是大三上学期的十一，和朋友一起回她的老家湖南玩，还去爬了衡山。上山时，月牙儿弯弯又朦胧，像是蒙上了一层白雾，远远近近的凝视着我们。爬至半山，空气开始微微湿润了起来，确有”万丈祝融拔地起，欲见不见轻烟里”的感觉，微微的手电筒光，扑面而来的细细丝丝的水汽，像是轻烟浮起，少吸气来，那带着些微湿润的空气便顺着鼻子呼吸道肺部，又似乎沁入到血管里，整个人从内而外的轻松起来。<br><a id="more"></a></p><p>两旁是郁郁葱葱的树丛，间或有枝桠相拦，甚有妙趣。愈往上，夜更深，空气里的水汽似乎慢慢的汇聚，沉重起来。通行小伙伴有经验，在乌云闻风而来时，便决定买了雨披，我们当时还乐观得很，觉得肯定用不上。没过半小时，淅淅沥沥的小雨也来了。</p><p>到山顶时，我们还抱着希望，时间还早，也许还有机会可以看得到日出呢。不知怎的，那时候，对任何事都还抱有神秘的自信，然而老天有另一番打算，雨开始越下越大，我们恨不得缩成一团，来减缓身体热量的散发。天大亮了，我们想着没机会看到了，便决定下山。</p><p>有个小伙伴还让我捎带块石头回去给他。我没想到山上不是泥就是水泥地，别说漂亮石头了，下雨泥泞地，连一块干净点的都没。矮子里挑高子，想着要千里迢迢（湖南北京也算是千里吧）带回去，选了块偏小的石头。现在这个朋友联系渐少，石头估摸着不知去处了。</p><p>第三次，大概就是这次了。都说桂林山水甲天下，不负其称，阳朔之美，似流动着的山水画，更富有诗情画意。乘船游湖，恰是微雨，那远远近近深深浅浅的山林，像是被抹在画布上的随意几笔，淡处有闲适悠空之感，浓处自有其错乱有致之美，再撒上轻轻淡淡朦朦胧胧的微雨，像是晕开了的雪。船越是开得飞快，这阳朔之美便越是汹涌而来。</p><p>这美揉成的感受像是塞在心里的发酵剂，她催化着回家的欲望，也催化着对多山多水的渴望。</p><p>我对同事说，来北京几年了，我感觉我枯萎了。</p><p>他们笑</p><p>我对朋友说，来北京待了好久，感觉自己都要枯萎了。</p><p>他们仍然笑</p><p>似乎感觉自己都要枯萎了。</p><p>身体里的水分少了很多，心里也是。</p><p>像是一棵渴水的小草，来到干燥的土地上，也许对于活着和生活，她会有另一番感受。</p><p>大概”贫穷会影响人的流体智力”一样，”缺水让枯萎的小草失去思想”</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;清明节和朋友一起去了桂林，又去了广州。路途中本应是畅意游览，竟又品味出了另一种倦怠感，对北方的倦怠感，是的没错，来南方旅行，品味出了北方生活的倦怠感。&lt;/p&gt;
&lt;p&gt;2012年8月末来北京，到现在2019年5月，在这个城市快7年时间了，而似乎也一直像是一条淡水鱼，在大海里辗转游览。&lt;/p&gt;
&lt;p&gt;7年里，除了回家，去南方玩过3次，&lt;/p&gt;
&lt;p&gt;第一次，估摸着应该是大二的五一，去武汉。那时候担任学校某个社团的社长，算是第一次公费出行。那时候还没做过轮渡，看到渡口的轮渡感觉好稀奇，当时有个朋友在武汉，陪着我来来回回坐了好几趟，半夜了我还不想回家，坐在外滩，吹着江风，和着时光吹乱我的头发和心情。现在想来那时候还真是，怎么说呢，有一种年轻人的矜持感，大概就是”我想要但我绝不会说，还要推开你”的深井冰吧…现在的性格里大概还残留了一些，但对自己倒是坦诚了很多，也世俗了很多。风景总是流动着的，回忆留在江风里，就莫名已经很美好了。&lt;/p&gt;
&lt;p&gt;第二次应该是大三上学期的十一，和朋友一起回她的老家湖南玩，还去爬了衡山。上山时，月牙儿弯弯又朦胧，像是蒙上了一层白雾，远远近近的凝视着我们。爬至半山，空气开始微微湿润了起来，确有”万丈祝融拔地起，欲见不见轻烟里”的感觉，微微的手电筒光，扑面而来的细细丝丝的水汽，像是轻烟浮起，少吸气来，那带着些微湿润的空气便顺着鼻子呼吸道肺部，又似乎沁入到血管里，整个人从内而外的轻松起来。&lt;br&gt;
    
    </summary>
    
    
      <category term="soft" scheme="http://yoursite.com/tags/soft/"/>
    
  </entry>
  
  <entry>
    <title>Flask-web搭建学习笔记（1）-bootstrap</title>
    <link href="http://yoursite.com/2019/03/17/2019/Flask-web(1)/"/>
    <id>http://yoursite.com/2019/03/17/2019/Flask-web(1)/</id>
    <published>2019-03-16T16:00:00.000Z</published>
    <updated>2019-03-17T10:57:50.645Z</updated>
    
    <content type="html"><![CDATA[<p>先安装python，以及flask和flask_bootstrap包</p><p>首先梳理一下文件夹，也就是网站最基本的框架</p><h3 id="xxx-py"><a href="#xxx-py" class="headerlink" title="xxx.py"></a>xxx.py</h3><p>程序主页面，用命令行运行，或是通过pycharm这些都OK，此处例举最基础的语法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">from flask import Flask, render_template</span><br><span class="line">from flask_bootstrap import Bootstrap</span><br><span class="line"># 引入flask和flask_bootstrap两个包</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">bootstrap = Bootstrap(app)</span><br><span class="line"></span><br><span class="line">@app.route(&apos;/&apos;)</span><br><span class="line">def index():</span><br><span class="line">    return render_template(&apos;base.html&apos;)</span><br><span class="line"># 这段可以复制，再修改增加功能，上面三行仅为index的设置，其他页面再设置 </span><br><span class="line">    </span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    app.run()</span><br><span class="line"># 当然也可以加入其他的一些功能，例如debug=True</span><br></pre></td></tr></table></figure></p>  <a id="more"></a><h3 id="templates"><a href="#templates" class="headerlink" title="templates"></a>templates</h3><p>可以放一些template，比如，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- index.html或是base.html 命名没关系，但要有一些基础的‘.html‘页面</span><br><span class="line">- 其他，比如user.html/404.html等，看页面功能，可以“继承”index.html的一些元素，</span><br></pre></td></tr></table></figure><h3 id="static-css：放css样式以及图片等静态内容"><a href="#static-css：放css样式以及图片等静态内容" class="headerlink" title="static/css：放css样式以及图片等静态内容"></a>static/css：放css样式以及图片等静态内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">main.css 放page的css代码</span><br></pre></td></tr></table></figure><h3 id="xxx-db：数据库"><a href="#xxx-db：数据库" class="headerlink" title="xxx.db：数据库"></a>xxx.db：数据库</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;先安装python，以及flask和flask_bootstrap包&lt;/p&gt;
&lt;p&gt;首先梳理一下文件夹，也就是网站最基本的框架&lt;/p&gt;
&lt;h3 id=&quot;xxx-py&quot;&gt;&lt;a href=&quot;#xxx-py&quot; class=&quot;headerlink&quot; title=&quot;xxx.py&quot;&gt;&lt;/a&gt;xxx.py&lt;/h3&gt;&lt;p&gt;程序主页面，用命令行运行，或是通过pycharm这些都OK，此处例举最基础的语法&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from flask import Flask, render_template&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from flask_bootstrap import Bootstrap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 引入flask和flask_bootstrap两个包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app = Flask(__name__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bootstrap = Bootstrap(app)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@app.route(&amp;apos;/&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def index():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return render_template(&amp;apos;base.html&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这段可以复制，再修改增加功能，上面三行仅为index的设置，其他页面再设置 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if __name__ == &amp;apos;__main__&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app.run()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当然也可以加入其他的一些功能，例如debug=True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="flask" scheme="http://yoursite.com/tags/flask/"/>
    
      <category term="bootstrap" scheme="http://yoursite.com/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装openblas或opencv或gcc</title>
    <link href="http://yoursite.com/2019/01/28/2019/install-openblas:opencv:gcc/"/>
    <id>http://yoursite.com/2019/01/28/2019/install-openblas:opencv:gcc/</id>
    <published>2019-01-27T16:00:00.000Z</published>
    <updated>2019-01-28T15:03:25.844Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ brew install openblas</span><br><span class="line">$ brew install opencv</span><br><span class="line">$ brew install gcc</span><br></pre></td></tr></table></figure><p>如果都安装成功，则无须看以下内容，否则需要：</p><blockquote><ul><li>安装或更新Xcode 最新版本</li><li>安装Xcode CLT</li></ul></blockquote><a id="more"></a><p>从app store中下载的Xcode，默认没有安装Command Line Tools，需要单独安装CLT</p><ul><li>在终端输入：<code>xcode-select --install</code></li><li>弹出提示框中选择“安装”</li><li>选择同意协议</li><li>安装</li><li>安装成功后，在终端输入 gcc-v命令查看是否安装成功</li></ul><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="https://railsapps.github.io/xcode-command-line-tools.html" target="_blank" rel="noopener">Xcode Command Line Tools</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brew install openblas&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ brew install opencv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ brew install gcc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果都安装成功，则无须看以下内容，否则需要：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;安装或更新Xcode 最新版本&lt;/li&gt;
&lt;li&gt;安装Xcode CLT&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>安装dlib</title>
    <link href="http://yoursite.com/2019/01/28/2019/install-dlib/"/>
    <id>http://yoursite.com/2019/01/28/2019/install-dlib/</id>
    <published>2019-01-27T16:00:00.000Z</published>
    <updated>2019-01-28T15:03:17.438Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装dlib"><a href="#安装dlib" class="headerlink" title="安装dlib"></a>安装dlib</h3><p>官方文档，可查看<a href="https://gist.github.com/ageitgey/629d75c1baac34dfa5ca2a1928a7aeaf" target="_blank" rel="noopener">How to install dlib from source on macOS or Ubuntu</a></p><h3 id="dlib的依赖"><a href="#dlib的依赖" class="headerlink" title="dlib的依赖"></a>dlib的依赖</h3><ul><li>dlib安装需要的依赖有openblas，opencv。可以直接使用brew安装。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew install openblas</span><br><span class="line">$ brew install opencv</span><br></pre></td></tr></table></figure></li></ul><p>安装出现：gcc安装失败（具体显示如问题），<a href="https://liheyuting.github.io/2019/01/28/install-openblas:opencv:gcc/" target="_blank" rel="noopener">安装gcc</a></p><ul><li>Mac的X11<br>X11是执行Unix程序的图形窗口环境。Mac OS X本身的程序是Aqua界面的，但是为了能够兼容unix和linux移植过来的程序（Mac OS X由BSD-UNIX修改而来），比如MatLab，就需要x11窗口环境。<a id="more"></a></li></ul><p>运行dlib需要X11，但Mac目前没有自带X11，需要重新下载安装，<a href="https://www.xquartz.org/" target="_blank" rel="noopener">下载地址</a>，下载后直接安装，默认安装目录为/opt/X11，需要在/usr/loca/opt目录下创建软连接，创建命令如下，创建后重启Mac。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/opt</span><br><span class="line">$ ln -s /opt/X11 X11</span><br></pre></td></tr></table></figure><h4 id="遇到的问题："><a href="#遇到的问题：" class="headerlink" title="遇到的问题："></a>遇到的问题：</h4><p><code>brew install openblas</code>安装时显示如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Warning: Your Xcode (10.0) is outdated.</span><br><span class="line">Please update to Xcode 10.1 (or delete it).</span><br><span class="line">Xcode can be updated from the App Store.</span><br><span class="line"></span><br><span class="line">Warning: Building gcc from source:</span><br><span class="line">  The bottle needs the Xcode CLT to be installed.</span><br><span class="line">xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</span><br><span class="line">Error: An exception occurred within a child process:</span><br><span class="line">  CompilerSelectionError: gcc cannot be built with any available compilers.</span><br><span class="line">Install GNU&apos;s GCC</span><br><span class="line">  brew install gcc</span><br></pre></td></tr></table></figure></p><p> <strong>解决办法</strong>：安装或更新到最新版本的Xcode</p><p> 重新安装Xcode后，重新安装gcc，显示：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> Warning: Building gcc from source:</span><br><span class="line">  The bottle needs the Xcode CLT to be installed.</span><br><span class="line">xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</span><br><span class="line">Error: An exception occurred within a child process:</span><br><span class="line">  CompilerSelectionError: gcc cannot be built with any available compilers.</span><br><span class="line">Install GNU&apos;s GCC</span><br><span class="line">  brew install gcc</span><br></pre></td></tr></table></figure></p><p><strong>解决办法</strong>：需要安装Xcode CLT</p><h3 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h3><ul><li><a href="https://blog.csdn.net/Quincuntial/article/details/53572415" target="_blank" rel="noopener">Mac下的dlib安装</a> 作者：SnailTyan </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装dlib&quot;&gt;&lt;a href=&quot;#安装dlib&quot; class=&quot;headerlink&quot; title=&quot;安装dlib&quot;&gt;&lt;/a&gt;安装dlib&lt;/h3&gt;&lt;p&gt;官方文档，可查看&lt;a href=&quot;https://gist.github.com/ageitgey/629d75c1baac34dfa5ca2a1928a7aeaf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;How to install dlib from source on macOS or Ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;dlib的依赖&quot;&gt;&lt;a href=&quot;#dlib的依赖&quot; class=&quot;headerlink&quot; title=&quot;dlib的依赖&quot;&gt;&lt;/a&gt;dlib的依赖&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;dlib安装需要的依赖有openblas，opencv。可以直接使用brew安装。&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brew install openblas&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ brew install opencv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装出现：gcc安装失败（具体显示如问题），&lt;a href=&quot;https://liheyuting.github.io/2019/01/28/install-openblas:opencv:gcc/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;安装gcc&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mac的X11&lt;br&gt;X11是执行Unix程序的图形窗口环境。Mac OS X本身的程序是Aqua界面的，但是为了能够兼容unix和linux移植过来的程序（Mac OS X由BSD-UNIX修改而来），比如MatLab，就需要x11窗口环境。
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="big data" scheme="http://yoursite.com/tags/big-data/"/>
    
  </entry>
  
  <entry>
    <title>Mac 安装人脸识别face_recognition python包</title>
    <link href="http://yoursite.com/2019/01/26/2019/face_collection_install/"/>
    <id>http://yoursite.com/2019/01/26/2019/face_collection_install/</id>
    <published>2019-01-25T16:00:00.000Z</published>
    <updated>2019-02-06T12:13:51.720Z</updated>
    
    <content type="html"><![CDATA[<p>一、安装face_recognition</p><p>二、完成功能开发</p><p>二、部署在云服务器上(Heroku,AWS)<br>部署在Heroku或者AWS的云端服务器上是很明智的<br>为了简化这个过程，有一个Dockerfile案例，教你怎么把face_recognition开发的app封装成<a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a>容器文件，你可以把它部署在所以支持Docker镜像文件的云服务上。</p><p><em>此篇为安装篇</em></p><h3 id="一、系统搭建"><a href="#一、系统搭建" class="headerlink" title="一、系统搭建"></a>一、系统搭建</h3><h4 id="1-系统环境"><a href="#1-系统环境" class="headerlink" title="1. 系统环境"></a>1. 系统环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- python 3.3+</span><br><span class="line">- mac</span><br><span class="line">- 已安装homebrew</span><br></pre></td></tr></table></figure><h4 id="2-Dlib安装"><a href="#2-Dlib安装" class="headerlink" title="2. Dlib安装"></a>2. Dlib安装</h4><h5 id="dlib的依赖点击查看安装教程"><a href="#dlib的依赖点击查看安装教程" class="headerlink" title="dlib的依赖点击查看安装教程"></a>dlib的依赖<a href="https://liheyuting.github.io/2019/01/28/install-dlib/" target="_blank" rel="noopener">点击查看安装教程</a></h5><p>dlib安装需要的依赖有openblas，opencv。可以直接使用brew安装。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew install openblas</span><br><span class="line">$ brew install opencv</span><br></pre></td></tr></table></figure><h5 id="安装dlib"><a href="#安装dlib" class="headerlink" title="安装dlib"></a>安装dlib</h5><p>点击查看<a href="https://gist.github.com/ageitgey/629d75c1baac34dfa5ca2a1928a7aeaf" target="_blank" rel="noopener">How to install dlib from source on macOS or Ubuntu</a></p><ul><li><p>从GitHub中克隆代码<br><code>git clone https://github.com/davisking/dlib.git</code></p></li><li><p>建立 dlib library</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd dlib</span><br><span class="line">mkdir build; cd build; cmake ..; cmake --build .</span><br></pre></td></tr></table></figure></li><li><p>建立和安装python拓展包</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ..</span><br><span class="line">python3 setup.py install</span><br></pre></td></tr></table></figure><h4 id="3-安装face-recoginition"><a href="#3-安装face-recoginition" class="headerlink" title="3. 安装face_recoginition"></a>3. 安装face_recoginition</h4><p><code>pip3 install face_recognition</code></p><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><ul><li><a href="https://github.com/ageitgey/face_recognition" target="_blank" rel="noopener">face_recognition</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、安装face_recognition&lt;/p&gt;
&lt;p&gt;二、完成功能开发&lt;/p&gt;
&lt;p&gt;二、部署在云服务器上(Heroku,AWS)&lt;br&gt;部署在Heroku或者AWS的云端服务器上是很明智的&lt;br&gt;为了简化这个过程，有一个Dockerfile案例，教你怎么把face_recognition开发的app封装成&lt;a href=&quot;https://www.docker.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Docker&lt;/a&gt;容器文件，你可以把它部署在所以支持Docker镜像文件的云服务上。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;此篇为安装篇&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;一、系统搭建&quot;&gt;&lt;a href=&quot;#一、系统搭建&quot; class=&quot;headerlink&quot; title=&quot;一、系统搭建&quot;&gt;&lt;/a&gt;一、系统搭建&lt;/h3&gt;&lt;h4 id=&quot;1-系统环境&quot;&gt;&lt;a href=&quot;#1-系统环境&quot; class=&quot;headerlink&quot; title=&quot;1. 系统环境&quot;&gt;&lt;/a&gt;1. 系统环境&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- python 3.3+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- mac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 已安装homebrew&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-Dlib安装&quot;&gt;&lt;a href=&quot;#2-Dlib安装&quot; class=&quot;headerlink&quot; title=&quot;2. Dlib安装&quot;&gt;&lt;/a&gt;2. Dlib安装&lt;/h4&gt;&lt;h5 id=&quot;dlib的依赖点击查看安装教程&quot;&gt;&lt;a href=&quot;#dlib的依赖点击查看安装教程&quot; class=&quot;headerlink&quot; title=&quot;dlib的依赖点击查看安装教程&quot;&gt;&lt;/a&gt;dlib的依赖&lt;a href=&quot;https://liheyuting.github.io/2019/01/28/install-dlib/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击查看安装教程&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;dlib安装需要的依赖有openblas，opencv。可以直接使用brew安装。&lt;/p&gt;
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="big data" scheme="http://yoursite.com/tags/big-data/"/>
    
      <category term="人脸识别" scheme="http://yoursite.com/tags/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>Hexo blog yilia主题迭代 -- 增加RSS功能+百度统计/google统计</title>
    <link href="http://yoursite.com/2019/01/23/2019/Hexo_190123/"/>
    <id>http://yoursite.com/2019/01/23/2019/Hexo_190123/</id>
    <published>2019-01-22T16:00:00.000Z</published>
    <updated>2019-03-17T11:27:13.439Z</updated>
    
    <content type="html"><![CDATA[<h3 id="增加RSS功能"><a href="#增加RSS功能" class="headerlink" title="增加RSS功能"></a>增加RSS功能</h3><ul><li><p>安装RSS插件<br>注意一定要安装到blog的根目录<br><code>npm install --save hexo-generator-feed</code></p></li><li><p>在你的项目的‘_config.yml‘配置文件下找到Extensions添加如下内容：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Extensions  #插件和主题</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">#RSS订阅</span><br><span class="line">plugins: hexo-generater-feed</span><br></pre></td></tr></table></figure><ul><li>在主题配置文件里，在rss位置，添加‘/atom.xml‘<a id="more"></a></li><li>刷新页面</li></ul><h3 id="更换到百度统计"><a href="#更换到百度统计" class="headerlink" title="更换到百度统计"></a>更换到百度统计</h3><ul><li>注册一个<a href="http://tongji.baidu.com" target="_blank" rel="noopener">百度统计</a>账号<ul><li>网站域名：用博客首页链接</li><li>网站首页：用博客首页链接</li></ul></li><li>hexo\themes\yilia\layout_partial\baidu-analytics.ejs中修改代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.baidu_tongji)&#123; %&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">#你的百度统计代码</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><ul><li>在hexo\themes\yilia\layout_partial\head.ejs文件中，在前增加<br><code>&lt;%- partial(&#39;baidu-analytics&#39;) %&gt;</code></li></ul><h3 id="google-analytics-谷歌统计"><a href="#google-analytics-谷歌统计" class="headerlink" title="google analytics 谷歌统计"></a>google analytics 谷歌统计</h3><ul><li>注册一个<a href="https://analytics.google.com/analytics/web/" target="_blank" rel="noopener">google analytics账号</a></li><li>hexo\themes\yilia\layout_partial\google-analytics.ejs 修改代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#google里全局代码，直接copy</span><br></pre></td></tr></table></figure><ul><li><p>在hexo\themes\yilia\layout_partial\head.ejs文件中，在前增加<br><code>&lt;%- partial(&#39;google-analytics&#39;) %&gt;</code></p></li><li><p>使用google tag assistant来验证设置<br><a href="https://support.google.com/tagassistant/answer/2947093?hl=zh_CN" target="_blank" rel="noopener">google tag assistant</a>是一款chrome扩展插件</p></li></ul><h3 id="修改代码块的颜色"><a href="#修改代码块的颜色" class="headerlink" title="修改代码块的颜色"></a>修改代码块的颜色</h3><p>在‘themes/yilia/source/main.266c1c.css中的.article-entry .highlight’中修改对应背景和字体颜色即可</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;增加RSS功能&quot;&gt;&lt;a href=&quot;#增加RSS功能&quot; class=&quot;headerlink&quot; title=&quot;增加RSS功能&quot;&gt;&lt;/a&gt;增加RSS功能&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装RSS插件&lt;br&gt;注意一定要安装到blog的根目录&lt;br&gt;&lt;code&gt;npm install --save hexo-generator-feed&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在你的项目的‘_config.yml‘配置文件下找到Extensions添加如下内容：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Extensions  #插件和主题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Plugins: https://hexo.io/plugins/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Themes: https://hexo.io/themes/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#RSS订阅&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plugins: hexo-generater-feed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;在主题配置文件里，在rss位置，添加‘/atom.xml‘
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>杂思</title>
    <link href="http://yoursite.com/2018/12/23/2018/daily1203/"/>
    <id>http://yoursite.com/2018/12/23/2018/daily1203/</id>
    <published>2018-12-22T16:00:00.000Z</published>
    <updated>2018-12-23T11:58:34.480Z</updated>
    
    <content type="html"><![CDATA[<h4 id="离别后遗症"><a href="#离别后遗症" class="headerlink" title="离别后遗症"></a>离别后遗症</h4><p>两周前回家了一趟。</p><p>无计划的临时回家多半不是什么好事。</p><p>毕业两年多，突感沧桑了很多。衰老和死亡倒不是一件急于求成的事情，它终将如期而至，幸运而来，对此无疑惑，也暂时做不到释怀。惶恐于成熟与衰老并不是完全的正相关，忽觉天已晚，仍疑自己还可年少无措。</p><p>人心会变柔软吗，会变得僵硬青白么，或视为生物对于危险和伤害的应激性反应。生离让人伤感，死别让人悲痛，常见会让人感到些微的好受些吗，还是让心变得僵硬些，伤心难受也是可以有些习惯的。人生在世，是不是就得习惯于生离死别，生活的真相呢。</p><p>落笔无力，言语无力，心情也无着落点，想想这么颓败，真是让人头疼呢。冷笑话也并不好笑呢。听着点破歌，好像也没什么意思呢。</p><p>每天要怎么过呢，不想做事，也提不起精神来，除了说起丧气话来，还有些话好抱怨，其他真的是一点兴致也提不起来。<br><a id="more"></a><br>去剪了个头发，哦，剪的不好吗，无所谓啦，去买个染发剂染头发吧，染成这个颜色可以吗。就这样吧。网购买点东西吧，好吧买不买都没关系。玩游戏吗，看小说吗。可以啊，然后呢，然后还是这样呢。</p><p>像是把脑袋遗漏在一个无声无息无光的界里，就让它闲逛，就让它放纵，就让它马不停蹄的四处浪荡，就让它自生自灭，天地间，无声无息无光，寂寞的让人发凉。</p><p>要不要人陪呢，陪伴有时候像是身上穿着的湿衣服，带着身体不断的往下坠落。脚像是站在平地，又像是迈出了悬崖，空空的凉风从下吹来，蒸发带来的冰凉也带着湿衣紧贴的温暖。</p><p>下午把《局外人》看完了，<br>“既然只有一种命运选中了我，而成千上万的幸运的人却都同他一样自称是我的兄弟，那么，他所说的上帝，他们选择的生活，他们选中的命运，又都与我何干？”</p><p>我懂吗，懂了么，我还没懂。所以才会为这命运感到难受，才做不到张开胸怀承认这世界的仁慈和友好。还无法认清生活本身的模样，然后看清自己的生活和生活中的自己的模样。</p><h4 id="关于深刻"><a href="#关于深刻" class="headerlink" title="关于深刻"></a>关于深刻</h4><p>前几天看到朋友圈分享的关于文学的解析，文字优美，内容翔实，却无法看进去。似乎文学这个东西太深刻了，文学史太庞大了，所以那些别人所写的很多东西，我都已经看不懂的了。看不懂作者的情怀，看不懂作者表达的深意，看不懂派系，也看到文学背后表达出来的深刻。后来又想想，这似乎也是一个“专业名词”的陷阱了。</p><p>想起回家的时候，和妹妹聊天说“机会成本”，妹妹很不耐烦的说，“你直接说事”而感受到的不知所措。当时我是想炫耀自己懂得多么？并没有，因为这些名词已经成为了下意识的反应，每个人身处的环境，让一些东西深入自身的习惯，这是方便和专业人士交流的方式，却不是一种流通的沟通方式。这种可以体现一个人的专业性，大概也是造成人以群分的一个原因吧。</p><p>有时候在想，很多东西得到人的承认，理应会有两个标准出发的，一个是专业人士的考评，一个是普通人的认可。能够引经据典的说明白一个事情，和能够通俗易懂的轻易讲明白一个事情，这个是否有高低之分呢？</p><p>如果略懂，那么倾向于专业名词三言两句讲完；如果不明白，那么偏向于通俗易懂的解释，故事尤佳。自己对这世界基本是所知甚少，一知半解，那么对于我来说，通俗易懂的用我能听懂的方式最好了。</p><p>反思自己的时候，最好也是用大家都明白的方式，或者传播较广的方式来说话比较好，再根据聊天对象所处的环境再调整那是再好不过了。</p><p>思忖思忖，如果想要装逼的话，将聊天内容涉及到的内容专业名词被几个强记一记，要记得滚瓜烂熟，说的时候要说成似是而非，只说一半，内容只说一半，知道的专业名词也只说一半。其他时候高深莫测的点点头，微笑不语，以免暴露自己的无知才好。</p><p>哎有点难有点难，罢了罢了。还是自娱自乐好。</p><h4 id="关于自言自语"><a href="#关于自言自语" class="headerlink" title="关于自言自语"></a>关于自言自语</h4><p>惶恐惶恐，发现自己得了一个病，病症为自言自语，间隙性会埋汰自己，并伴有轻微自我伤害，方式为拍打脑袋</p><p>深呼一口气，哎，耻于讲自己神经质的行为，万一不小心激起他人的嘲讽就糟了，更可怕的是激起别人的怜悯关怀。</p><p>只有一种命运选择了我，很显然，当我未预料到死亡即将来到之前，我都无法断言自己的命运是怎样的。命运它是一定的，并不是说当我这个个体未存在时它即为一定的，而是当我即将与我的命运相遇的时候，命运就是一定的了。各种因素影响我的性格，各种因素影响我的生活，我也造成了我即将遇到的各种的可能，我的选择并不是我的选择，而是因为各种因素已经为我的选择做好了伏笔。我的选择既是我的选择，又不是我的选择。我的人生，我遇到的人，我走过的路，我经历的事，我的悲伤难过，我的欢乐喜悦，当我和这个世界产生联系的一瞬间，就开始慢慢的浮现出命运的线条，不断的描绘，不断的丰满，不断的具体化，直至命运确定了我的命运。</p><p>你说命运会不会改变，我认为会改变，性格会不会改变，我认为会改变，但是我的“认为”在命运里早已被确定。</p><p>那么我在这命运的圈里，我又如何能挣脱？我的挣脱也将成为命运的一部分。</p><p>思考会成为人的负累，它让人在一个怪圈里不断的打转。</p><p>我担心自己的逻辑说服了自己，让自己打转，那么我怎样才能打破这种怪圈式的逻辑想法呢。</p><p>生活中还是不要有深刻比较好，这样算不上深刻的东西即让我感受到自身的脆弱。</p><p>说的没错，正是因为这样封闭式的逻辑才会使自己焦虑不堪，这里面缺少新的东西，郁郁寡欢。</p><p>玻璃罐里，这条鱼只能看到一方水土，便以为这世界全是如此，便以为仅自己负累坐井观天，看到笼里的小鸟，就以为对方能够看到整个蓝天。</p><p>这个世界大得很呢，谁不是一方的青蛙坐井观天，何必为自己的坐井观天感到难受？</p><p>想想何必为着这种事耗费心神呢。</p><p>哈哈哈哈哈哈结束。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;离别后遗症&quot;&gt;&lt;a href=&quot;#离别后遗症&quot; class=&quot;headerlink&quot; title=&quot;离别后遗症&quot;&gt;&lt;/a&gt;离别后遗症&lt;/h4&gt;&lt;p&gt;两周前回家了一趟。&lt;/p&gt;
&lt;p&gt;无计划的临时回家多半不是什么好事。&lt;/p&gt;
&lt;p&gt;毕业两年多，突感沧桑了很多。衰老和死亡倒不是一件急于求成的事情，它终将如期而至，幸运而来，对此无疑惑，也暂时做不到释怀。惶恐于成熟与衰老并不是完全的正相关，忽觉天已晚，仍疑自己还可年少无措。&lt;/p&gt;
&lt;p&gt;人心会变柔软吗，会变得僵硬青白么，或视为生物对于危险和伤害的应激性反应。生离让人伤感，死别让人悲痛，常见会让人感到些微的好受些吗，还是让心变得僵硬些，伤心难受也是可以有些习惯的。人生在世，是不是就得习惯于生离死别，生活的真相呢。&lt;/p&gt;
&lt;p&gt;落笔无力，言语无力，心情也无着落点，想想这么颓败，真是让人头疼呢。冷笑话也并不好笑呢。听着点破歌，好像也没什么意思呢。&lt;/p&gt;
&lt;p&gt;每天要怎么过呢，不想做事，也提不起精神来，除了说起丧气话来，还有些话好抱怨，其他真的是一点兴致也提不起来。&lt;br&gt;
    
    </summary>
    
    
      <category term="soft" scheme="http://yoursite.com/tags/soft/"/>
    
  </entry>
  
  <entry>
    <title>有趣之人如此多，少我一人也无妨</title>
    <link href="http://yoursite.com/2018/12/01/2018/daily1201/"/>
    <id>http://yoursite.com/2018/12/01/2018/daily1201/</id>
    <published>2018-11-30T16:00:00.000Z</published>
    <updated>2018-12-23T11:41:37.125Z</updated>
    
    <content type="html"><![CDATA[<p>一天待在家里，偶尔出来一下，找了个咖啡厅，假装自己今天也是有所收获吧。</p><p>每天日复一日，有时候忍不住在想，这样下去又有什么意思呢。这种没意思的话，说出来又有什么意思呢。今天看群里有人说，即使你是个小ID，也应该表达自身的观点，否则就会被带着走。回想下，自己一直有点抗拒输出自己的价值观，虽然生活工作中价值观输出又是日常。但说的东西似乎就会让别人给你下tag的这种感觉，并不舒服，人性复杂，性格多变，稳定才是奇怪的事情，但人比较容易刻板印象，这也是奇怪，大概是惯性思维习惯导致的？倘若为他人的标签化过于忧虑，似乎也是一种焦虑且不够有安全感的表现了。如果按自尊的定义“喜欢自身的程度”来说，这岂不又是一种“低自尊”的状态？这样不好不好，这不算是“坦然平静”的生活处理方式了，但生活为什么有需要“坦然泰然”的态度呢，这就源源不绝的废话连篇了。</p><a id="more"></a>  <p>所以如果脑袋自动转，就会有这样源源不断的废话，萦绕不绝，令人烦忧。人多数时候还是无聊的紧啊，制造物理化学垃圾，还要制造精神垃圾。当然，我这样的胡言乱语还是不要多想比较好，关于意义啊有趣啊这类话题啊，还是不加多想为好，毕竟有趣的人那么多，多或者少一个你这样无趣的人，也是毫无关系的。</p><p>多数时候，身心会处于一种紧绷状态，会很担心被别人发现自己是个愚蠢少言无知无趣的人，这似乎隐藏着一个巨大的威胁，寡盐之姿也就罢了，脱离了“颜值当道”的正统道路，还爬不上“有趣灵魂”的高铁，头顶上悬挂着一个巨大的牌子“无趣至极”。平日里的言行，怕沉默暴露寡言，怕多说暴露无趣，总让人为难。有时，只好乱说一通，假装正经有趣，然而难度系数实在是高，毕竟贫穷无知无趣是隐藏不了的东西。</p><p>有时候会想着，大家认为的有趣到底是个什么东西呢，评判标准是怎样的。回头一想，罢了罢了，即使知道了标准又如何呢，你本一无趣之人，即使知道，演技又不行，暴露也是迟早之事，又有何必要？</p><p>所以还是寡言最佳，宁为沉默之人，少暴露无趣无知之实。</p><p>小时候，老师们总是勉励我们，是金子总是会发光的。越是长大，越是发现，优秀的人遍地都是，如星星闪耀，火树银花。于是，慢慢的，内心花园里的自信之树，上面的星星点点四散开来，坠落漫延，原还以为会有一些哗啦啦破裂的壮烈之声，或是远远呐喊传来的回声，后来才发现，连点滴涟漪都未曾溅起。且不提金子是否埋在土地深处最终躲过岁月的追捕，消散在时光这种破话，是不是金子你心里难道还没有个B数吗。</p><p>同事问“怎么把抖音给卸载了？”，一脸严肃的表达：“不想在别人的APP里浪费自己的时间”，这话可真是睁着眼睛说的，说的连自己都信了。活在科技时代里的小白鼠，本人内心焦灼不安，却实是被消费的坦坦荡荡。</p><p>所以说呢，这大浪潮啊，不知道能不能扒着蚂蚁团球的最外层，度过波涛汹涌，抵达彼岸了。</p><hr><p>每周胡言乱语一篇+，算是完成任务，也就不多说了，也不愿回头再读这垃圾。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一天待在家里，偶尔出来一下，找了个咖啡厅，假装自己今天也是有所收获吧。&lt;/p&gt;
&lt;p&gt;每天日复一日，有时候忍不住在想，这样下去又有什么意思呢。这种没意思的话，说出来又有什么意思呢。今天看群里有人说，即使你是个小ID，也应该表达自身的观点，否则就会被带着走。回想下，自己一直有点抗拒输出自己的价值观，虽然生活工作中价值观输出又是日常。但说的东西似乎就会让别人给你下tag的这种感觉，并不舒服，人性复杂，性格多变，稳定才是奇怪的事情，但人比较容易刻板印象，这也是奇怪，大概是惯性思维习惯导致的？倘若为他人的标签化过于忧虑，似乎也是一种焦虑且不够有安全感的表现了。如果按自尊的定义“喜欢自身的程度”来说，这岂不又是一种“低自尊”的状态？这样不好不好，这不算是“坦然平静”的生活处理方式了，但生活为什么有需要“坦然泰然”的态度呢，这就源源不绝的废话连篇了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="soft" scheme="http://yoursite.com/tags/soft/"/>
    
  </entry>
  
  <entry>
    <title>这个世界太严肃，想到这点，我毛骨悚然。</title>
    <link href="http://yoursite.com/2018/11/24/2018/daily1124/"/>
    <id>http://yoursite.com/2018/11/24/2018/daily1124/</id>
    <published>2018-11-23T16:00:00.000Z</published>
    <updated>2018-12-23T11:41:38.798Z</updated>
    
    <content type="html"><![CDATA[<p>什么时候变得像现在这个样子，每到落笔，似乎灾难性的事情一下子都全部落到了肩上一样，各种幻想自己的悲惨。</p><p>眼睛像是蒙上了一层薄雾，明知自己无限制的玩游戏之后又摸索着用电脑写东西，就好像狗屁不通的胡乱撕咬，也像是自由的在冰面上滑行。</p><p>文字自有其欺骗性的本性以及自由自在的自在。她既是脆弱的不堪一击的比玻璃和爱情还更不靠谱，又像是穿越过无数时光还死乞白赖的活着精彩又长久。让人欲罢不能。</p><p>时常不想动笔，动笔即各种生活的坏处涌上心头，就不知说些什么好，和自己对话，总是乱七八糟的糟心事，当作和别人对话吧，又好像喋喋不休的祥林嫂，让人联想到圆规。索性就还是不写。要真写点正经话吧，又要挠头摆尾，鱼鳞都好像要挠掉一样，半天憋不出一句半句来。说出的话来，像是一个个的泡泡，即怕它落在半空不落地，心就空落落，要是落地了，又是严肃的要命，没意思的紧。<br><a id="more"></a><br>一落笔，你这心里乌黑的墨汁，心里头阴惨惨的角落就好像显露无疑。平时在别人面前，总要保持个沉默靠谱的模样，别人说你文静温柔吧，你这心里头也高兴不起来，无趣的像个木头人，想想就觉得没意思。还真是没啥意思，现在出门遇到人，都不晓得想讲什么话，讲的多是无趣话。不讲话，又是闷的可以。讲的多了，就又想是裹布。</p><p>一开口就得输出价值观，似乎你这观点偏颇有理才是正当，要是你觉得都行，那就可不行了，那就是没性格，没想法。得表态啊，花好不好看，好看或是不好看，看花是花，看鸟是鸟那可不行，得有点实在的看法啊，对着个花，你还不能说点“花开花飞飞满天“的伤感话，或者花的香味若隐若现似柔似媚的赞美话？花怎能是个单纯的花呢，你还是年轻啊。</p><p>肩膀疼，脖子也不太舒服，我时常惶恐的紧，生个急性病还好说，来吧来吧，一锤子伤害，落在身上也就那样，这慢刀子可不成啊，钝的你心都要颤着疼。后来发现，你没个职业病，还敢说敬业？</p><p>有些黑色墨汁啊，传染性最强，你不知不觉，感觉自己手臂已经慢慢的浸染了，还不知晓，路边小树碰你下，你心中一阵恼怒，想要踹它，抬脚时发现自己的脚已经灰突突的让人厌恶。</p><p>又是一堆垃圾话，有时候想着来这人间这一趟，到底是为了什么。</p><p>有时候想着以前曾对人说过伤害的话，心里有些难受。年少不懂事那才是借口，为了显示自己比较酷比较特别，就说出一些伤人的话，有时候想起来很想对人道个歉。道歉了又怎样呢，你对他人的伤害已经造成了，你现在再重提，不谈提醒对方的二次伤害，即使接受了又怎样，你难道不是为了求得自己的心里好受吗，为了自己解脱，再去提醒对方已发生的伤害。</p><p>什么乱七八糟的。</p><p>想起读书时学到的伍尔夫的《墙上的斑点》，当时真觉得这个作者好无聊，一个黑点就能联想大这么多，这得有多无聊啊。想完了还得写下来，写下来还让我们学，学什么？学看一个斑点？现在长大了，写的什么我已经记不得了，奇迹般的，这篇东西的感觉我还记得很清楚。无聊无趣百无聊赖，不正是现在我的状态吗？这难道就是长大之后会生的一个无聊病？小时候能吃到薯片就好像天塌下来也不害怕的欢喜事，现在吃个美味，整个人都还是焦虑，这个蠢笨的人啊，又在浪费粮食了。诶？不对不对，换个思路岂不是”蠢笨如我，竟有幸可品尝此等美味，岂不幸哉游哉？“</p><p>这个世界太严肃，想到这点，我毛骨悚然。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;什么时候变得像现在这个样子，每到落笔，似乎灾难性的事情一下子都全部落到了肩上一样，各种幻想自己的悲惨。&lt;/p&gt;
&lt;p&gt;眼睛像是蒙上了一层薄雾，明知自己无限制的玩游戏之后又摸索着用电脑写东西，就好像狗屁不通的胡乱撕咬，也像是自由的在冰面上滑行。&lt;/p&gt;
&lt;p&gt;文字自有其欺骗性的本性以及自由自在的自在。她既是脆弱的不堪一击的比玻璃和爱情还更不靠谱，又像是穿越过无数时光还死乞白赖的活着精彩又长久。让人欲罢不能。&lt;/p&gt;
&lt;p&gt;时常不想动笔，动笔即各种生活的坏处涌上心头，就不知说些什么好，和自己对话，总是乱七八糟的糟心事，当作和别人对话吧，又好像喋喋不休的祥林嫂，让人联想到圆规。索性就还是不写。要真写点正经话吧，又要挠头摆尾，鱼鳞都好像要挠掉一样，半天憋不出一句半句来。说出的话来，像是一个个的泡泡，即怕它落在半空不落地，心就空落落，要是落地了，又是严肃的要命，没意思的紧。&lt;br&gt;
    
    </summary>
    
    
      <category term="soft" scheme="http://yoursite.com/tags/soft/"/>
    
  </entry>
  
  <entry>
    <title>Python数据可视化：pyecharts</title>
    <link href="http://yoursite.com/2018/11/04/2018/pyecharts/"/>
    <id>http://yoursite.com/2018/11/04/2018/pyecharts/</id>
    <published>2018-11-04T04:54:00.000Z</published>
    <updated>2018-11-10T07:03:13.379Z</updated>
    
    <content type="html"><![CDATA[<p>预想是学习通过python开发一个数据图表的平台，用API获取数据，数据可视化。</p><p>通过搜索等，发现echarts可以实现数据可视化，并且还有针对python的第三方库。以下记录过程</p><h4 id="安装pyecharts"><a href="#安装pyecharts" class="headerlink" title="安装pyecharts"></a>安装pyecharts</h4><p><code>pip install pyecharts</code><br>不知道为什么我总是不成功，最终还是在下载了pyecharts库文件才安装成功。</p><ol><li><p>安装了wheel<br><code>pip install wheel</code></p></li><li><p>下载安装pyecharts<br>下载了<a href="https://files.pythonhosted.org/packages/7e/aa/63f80d0d2d2ee43cfe9f30822eb751ba67359aa54507a05b740ed5666416/pyecharts-0.1.9.4-py2.py3-none-any.whl" target="_blank" rel="noopener">pyecharts-0.1.9.4-py2.py3-none-any.whl</a></p></li></ol><a id="more"></a><h4 id="图表类型"><a href="#图表类型" class="headerlink" title="图表类型"></a>图表类型</h4><ul><li>Bar（柱状图/条形图） </li><li>Bar3D（3D 柱状图）<br>&lt; !–more–&gt;</li><li>Boxplot（箱形图） </li><li>EffectScatter（带有涟漪特效动画的散点图） </li><li>Funnel（漏斗图） </li><li>Gauge（仪表盘） </li><li>Geo（地理坐标系） </li><li>Graph（关系图） </li><li>HeatMap（热力图） </li><li>Kline（K线图） </li><li>Line（折线/面积图） </li><li>Line3D（3D 折线图） </li><li>Liquid（水球图） </li><li>Map（地图） </li><li>Parallel（平行坐标系） </li><li>Pie（饼图） </li><li>Polar（极坐标系） </li><li>Radar（雷达图） </li><li>Sankey（桑基图） </li><li>Scatter（散点图） </li><li>Scatter3D（3D 散点图） </li><li>ThemeRiver（主题河流图） </li><li>WordCloud（词云图）</li></ul><h4 id="第一个图表"><a href="#第一个图表" class="headerlink" title="第一个图表"></a>第一个图表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from pyecharts import Line</span><br><span class="line"></span><br><span class="line">attr=[&quot;衬衫&quot;,&quot;羊毛衫&quot;,&quot;雪纺衫&quot;,&quot;裤子&quot;,&quot;高跟鞋&quot;,&quot;袜子&quot;]</span><br><span class="line">v1=[5,20,36,10,75,90]</span><br><span class="line">v2=[10,25,8,60,20,80]</span><br><span class="line">bar=Line(&quot;各商家产品销售情况&quot;)</span><br><span class="line">bar.add(&quot;商家A&quot;,attr,v1,is_stack=True)</span><br><span class="line">bar.add(&quot;商家B&quot;,attr,v2,is_stack=True)</span><br><span class="line">bar.show_config()</span><br><span class="line">bar.render()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20181104174725420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTgxMTAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>bar = Bar(“主标题”，”副标题”)<br>bar.add（） 调用add()函数添加图表的数据和设置各种配置项<br>bar.show_config() 打印输出图表的所有配置项<br>bar.render() 生成render.html文件，也可以设置路径和文件名<br>bar.use_theme(‘dark’) 更改主体色系</p><h4 id="绘制图表过程"><a href="#绘制图表过程" class="headerlink" title="绘制图表过程"></a>绘制图表过程</h4><ol><li>chart_name = Type() 初始化具体类型图表</li><li>add() 添加数据及配置项</li><li>render() 生成.html文件</li></ol><p><a href="http://pyecharts.org/#/zh-cn/prepare" target="_blank" rel="noopener">参考网站</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;预想是学习通过python开发一个数据图表的平台，用API获取数据，数据可视化。&lt;/p&gt;
&lt;p&gt;通过搜索等，发现echarts可以实现数据可视化，并且还有针对python的第三方库。以下记录过程&lt;/p&gt;
&lt;h4 id=&quot;安装pyecharts&quot;&gt;&lt;a href=&quot;#安装pyecharts&quot; class=&quot;headerlink&quot; title=&quot;安装pyecharts&quot;&gt;&lt;/a&gt;安装pyecharts&lt;/h4&gt;&lt;p&gt;&lt;code&gt;pip install pyecharts&lt;/code&gt;&lt;br&gt;不知道为什么我总是不成功，最终还是在下载了pyecharts库文件才安装成功。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装了wheel&lt;br&gt;&lt;code&gt;pip install wheel&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载安装pyecharts&lt;br&gt;下载了&lt;a href=&quot;https://files.pythonhosted.org/packages/7e/aa/63f80d0d2d2ee43cfe9f30822eb751ba67359aa54507a05b740ed5666416/pyecharts-0.1.9.4-py2.py3-none-any.whl&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;pyecharts-0.1.9.4-py2.py3-none-any.whl&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python CGI准备：IIS 配置</title>
    <link href="http://yoursite.com/2018/10/22/2018/IISDeploy/"/>
    <id>http://yoursite.com/2018/10/22/2018/IISDeploy/</id>
    <published>2018-10-22T04:59:28.000Z</published>
    <updated>2018-11-10T07:00:55.933Z</updated>
    
    <content type="html"><![CDATA[<p><strong>什么是CGI</strong></p><p>CGI 目前由NCSA维护，NCSA定义CGI如下：</p><p>CGI(Common Gateway Interface),通用网关接口,它是一段程序,运行在服务器上如：HTTP服务器，提供同客户端HTML页面的接口。</p><p>大部分教程接下来会详细讲明CGI是怎么工作，怎么实现的。</p><p>但是对于很多如我从头开始，小白要直接理解使用是有一定的困难的。这里涉及到一个如何实现CGI的环境配置。这里把过程记录下来，如果有遇到和我同样问题的同学，也可少走点弯路。</p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><a id="more"></a><p><strong>1. 安装启动IIS</strong></p><p>控制面板-程序-程序与功能-打开或关闭Windows功能-Internet information services（按所需功能）-确定<br><img src="https://img-blog.csdn.net/20181022133300750?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTgxMTAw/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p><p><strong>2. 创建快捷方式</strong></p><p>安装完了，到哪儿去找到IIS呢？</p><p>控制面板-系统与安全-管理工具</p><p>这里就会出现 Internetinformation services(IIS)管理器，邮件发送桌面快捷方式就可以了<br><img src="https://img-blog.csdn.net/20181022133314366?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTgxMTAw/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p><p><strong>3. 配置python环境</strong></p><p>打开IIS</p><ul><li>配置ISAPI和CGI限制</li></ul><p>点击右上角添加</p><p><img src="https://img-blog.csdn.net/20181022133325143?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTgxMTAw/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p><ul><li>处理程序映射</li></ul><p>右上角添加模块映射</p><p>（这里已经配置完了，模块选择CgiModule就行）<br><img src="https://img-blog.csdn.net/20181022133335516?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTgxMTAw/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p><p>接下来就可以创建一个网站测试一下了。</p><p>然而未真正实操CGI，这个权作为记录吧。</p><p>有时候会心慌，时常恐慌于自己的愚钝和怠懒，在高速公路上的停滞倒退，导致最终的车毁人亡。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;什么是CGI&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CGI 目前由NCSA维护，NCSA定义CGI如下：&lt;/p&gt;
&lt;p&gt;CGI(Common Gateway Interface),通用网关接口,它是一段程序,运行在服务器上如：HTTP服务器，提供同客户端HTML页面的接口。&lt;/p&gt;
&lt;p&gt;大部分教程接下来会详细讲明CGI是怎么工作，怎么实现的。&lt;/p&gt;
&lt;p&gt;但是对于很多如我从头开始，小白要直接理解使用是有一定的困难的。这里涉及到一个如何实现CGI的环境配置。这里把过程记录下来，如果有遇到和我同样问题的同学，也可少走点弯路。&lt;/p&gt;
&lt;h2 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h2&gt;
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>git 清单</title>
    <link href="http://yoursite.com/2018/09/28/2018/gitlist/"/>
    <id>http://yoursite.com/2018/09/28/2018/gitlist/</id>
    <published>2018-09-28T05:02:31.000Z</published>
    <updated>2018-11-10T06:55:19.352Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Git-配置"><a href="#Git-配置" class="headerlink" title="Git 配置"></a>Git 配置</h4><p>git config工具专门用来配置或读取相应的工作环境变量</p><p>git config –global user.name “dora”<br>git config –global user.email xxx@163.com</p><p>–global所有项目会默认使用这个配置信息</p><p>在某个特定文件中使用其他的账户，去掉–global重新配置，新的设定保存在当前项目的 .git/config 文件里</p><p><strong>文本编辑器</strong><br>默认的是Vi或者Vim，重新设置：<br>git config –global core.editor sublime</p><p><strong>差异分析工具</strong><br><a id="more"></a></p><h4 id="Git创建仓库"><a href="#Git创建仓库" class="headerlink" title="Git创建仓库"></a>Git创建仓库</h4><p><strong>git 创建仓库</strong></p><p>#使用当前目录作为Git仓库，使它初始化<br>git init</p><p>#使用指定目录作为仓库<br>git init newrepo</p><p>当前目录会出现一个名叫.git的目录。<br>如果当前目录下有几个文件需要纳入版本控制，需要先用git add命令告诉git开始对这些文件进行跟踪，然后提交。</p><p>#Q 需要后期往前再看一下<br>git add *.c<br>git add README #类似增加一个说明文档<br>git commit -m ‘initial project version’</p><p><strong>从现有仓库克隆</strong><br>git clone [url] xxxx</p><p>#xxx 用来指定新名字</p><h4 id="git-基本操作"><a href="#git-基本操作" class="headerlink" title="git 基本操作"></a>git 基本操作</h4><p>git init #创建新仓库<br>git clone [url] #拷贝已存在的仓库到本地<br>git add #将文件添加到缓存<br>git status #查看状态<br>git diff #查看执行git status结果的详细信息</p><ul><li>git diff #尚未缓存</li><li>git diff –cached #查看已缓存的改动</li><li>git diff HEAD #查看已缓存的与未缓存的所有改动</li><li>git diff –stat #显示摘要<br>#git statue 显示改动，git diff 显示每行具体改动<br>git commit #记录缓存区的快照<br>#git add 写入缓存，git commit提交到云上<br>git commit -m #message 写写更新描述<br>git commit -a #一键推送到云上<br>git commit -am<br>git reset HEAD #取消已缓存的内容<br>git rm #将文件从缓存区中移除<br>git rm –cached #工作目录中保留</li></ul><h4 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h4><p>git branch (branch name) #创建分支<br>git checkout (branch name) #切换分支<br>git merge #合并分支内容<br>git checkout -b (branchname) 创建新分支并切换<br>git branch -d (branchname) #删除分支</p><h4 id="git查看提交历史"><a href="#git查看提交历史" class="headerlink" title="git查看提交历史"></a>git查看提交历史</h4><p>git log #查看提交历史<br>git log –oneline #简洁版本<br>git –graph #查看历史提交中的分支合并<br>git –reverse #逆向显示所有日志<br>git log –author #查找某人的爪印</p><h4 id="git标签"><a href="#git标签" class="headerlink" title="git标签"></a>git标签</h4><p>git tag -a xxxx  #带注释的标签<br>git log –decorate #查看打过标签的内容<br>git tag #查看所有标签</p><h4 id="git-远程仓库"><a href="#git-远程仓库" class="headerlink" title="git 远程仓库"></a>git 远程仓库</h4><p>暂时用不上，留空</p><h4 id="git-服务器搭建"><a href="#git-服务器搭建" class="headerlink" title="git 服务器搭建"></a>git 服务器搭建</h4><p>暂时用不上，留空</p><h3 id="git-pycharm-操作过程"><a href="#git-pycharm-操作过程" class="headerlink" title="git + pycharm 操作过程"></a>git + pycharm 操作过程</h3><ul><li>version control （设置界面中）</li><li>导入版本控制台，点击import into CVS</li><li>接着使用过程即可</li></ul><ol><li>add</li><li>commit</li><li>push<br>第一次：git push –set -upsteam origin master<br>以后： git push origin master</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Git-配置&quot;&gt;&lt;a href=&quot;#Git-配置&quot; class=&quot;headerlink&quot; title=&quot;Git 配置&quot;&gt;&lt;/a&gt;Git 配置&lt;/h4&gt;&lt;p&gt;git config工具专门用来配置或读取相应的工作环境变量&lt;/p&gt;
&lt;p&gt;git config –global user.name “dora”&lt;br&gt;git config –global user.email xxx@163.com&lt;/p&gt;
&lt;p&gt;–global所有项目会默认使用这个配置信息&lt;/p&gt;
&lt;p&gt;在某个特定文件中使用其他的账户，去掉–global重新配置，新的设定保存在当前项目的 .git/config 文件里&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;文本编辑器&lt;/strong&gt;&lt;br&gt;默认的是Vi或者Vim，重新设置：&lt;br&gt;git config –global core.editor sublime&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;差异分析工具&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Excel 蓝图</title>
    <link href="http://yoursite.com/2018/09/16/2018/Excel/"/>
    <id>http://yoursite.com/2018/09/16/2018/Excel/</id>
    <published>2018-09-15T16:00:00.000Z</published>
    <updated>2018-09-19T12:17:20.810Z</updated>
    
    <content type="html"><![CDATA[<p>刚毕业开始工作的同事对excel小技巧还存在比较强烈的好奇，想起当初刚刚毕业的时候也曾东找西找教程，每天早半小时到公司，先看两个excel公众号推送学习，找一些小视频课的时候。她比较羞涩，似乎很担心打扰到别人。也出于渐渐淡忘这些，所以今天准备把一些常用的功能列举下来，让她更有方向点。同时也希望她今后可以更加大胆的说出自己的想法。</p><p>我把excel的使用分成几部分</p><ol><li>快捷按键/自带功能</li><li>函数</li><li>数据透视表</li><li>数据可视化</li><li>VBA（初学可先略过）</li></ol><p>数据透视表已经整理过了，这里略过不提</p><a id="more"></a><h4 id="快捷按键-自带功能"><a href="#快捷按键-自带功能" class="headerlink" title="快捷按键/自带功能"></a>快捷按键/自带功能</h4><p>将自定义导航栏放到主导航栏下面，放入常用的命令，比如</p><ul><li>插入数据透视表</li><li>降序排序/升序排序</li><li>分裂</li><li>文字颜色</li><li>筛选/消除筛选</li><li>条件格式</li><li>数据验证</li><li>格式刷</li><li>…</li></ul><p><strong> 快捷键 </strong></p><ol><li>shift + control + 方向键 可以块状多选数据</li><li>control + 1  设置单元格格式</li><li>shift + control + “+” 增加行列</li><li>control + “-” 删除行列</li><li>F4 这个键有很多妙用，比如在公式里“绝对引用”，复制填充功能，可以自行搜索，不展开了</li><li>control + F  搜索</li><li>control + H 搜索替换</li><li>control + G 定位</li><li>… </li></ol><p>常用功能</p><ol><li>分列<br>将一列数据分成几列<br>比如有一列数据是整齐的这种格式“ 姓名：木子/电话：13111“</li></ol><p>老板想要的是英文列名：</p><ul><li>Last name</li><li>First name</li><li>Phone<br>…</li></ul><p>这个时候分裂功能就很有用了，先使用特殊符号分裂，再按长度分离“姓名”</p><ol><li><p>条件格式<br>这个在数据透视表中也说过，结合使用</p></li><li><p>快速填充<br>有时候需要获取前一列的某几个字符，前列虽然是有同样规则，但是获取的字符长度却不一样，这时候可以用快速填充-快速填充</p></li></ol><ol><li><p>数据验证<br>下拉框的使用等</p></li><li><p>组合</p></li><li>分类汇总</li><li>保护工作表（结合设置单元格格式可以设置个别保护）</li><li>冻结窗格</li><li>定义名称</li><li>空行的妙用</li></ol><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><p>在excel中直接看函数使用说明就足够了。<br>只说几个常用的，其他的可以直接下载百度云链接中的文档，很全</p><ul><li><p>vlookup(张三，选择大表，n，0) 比如要在信息表中知道张三的女朋友是谁，信息表中姓名第n例是女朋友，0表示精确查找，1表示模糊查询</p></li><li><p>lookup</p></li><li>index+match</li><li>len 字符串长度</li><li>left/right/middle 获取字符串从左/右/中间的字符串，（哪个格子，第几个字符起，取几个）</li><li>count/counta/countif/countifs 计算</li><li>if/iferror</li><li>sum/sumif/average/averageif/min/max</li></ul><p>函数百度网盘：</p><h4 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h4><p><strong> 基本图表 </strong><br>可以参考下面这张图</p><p><strong> 迷你图 </strong><br>可以在一个格子里展示，比如大批的数据都展示不同的维度，就可以用迷你图仅示意性展示数据趋势，也不会占有太多地方</p><p><strong> 美化图表 </strong><br>地图</p><ul><li>Office自带两种，平面地图+3D地图</li><li>像素地图等：</li></ul><p>复制小图标，再选中柱状图的柱，粘贴，在格式填充中选择层叠<br>（或者复制图片，“设置数据系列格式-颜色-填充-图片或者纹理填充”+“插入图片来自剪贴板+层叠”）</p><p>这样就会出现图案替换原来的简单柱子了，仅作为抛砖引玉。<br>还是那句话，“逻辑能带你从A到B，想象力却能带你去任何地方”，同一个功能初看来是简陋不堪，权看人的使用。</p><p>网址推荐：<br>地图<br>amCharts Free SVG Maps：<a href="https://www.amcharts.com/svg-maps/" target="_blank" rel="noopener">https://www.amcharts.com/svg-maps/</a><br>像素地图：<a href="http://pixelmap.amcharts.com/" target="_blank" rel="noopener">http://pixelmap.amcharts.com/</a></p><p>图表：<br>amCharts：<a href="https://www.amcharts.com/" target="_blank" rel="noopener">https://www.amcharts.com/</a><br>infographics：<a href="https://infogr.am/app/#/library" target="_blank" rel="noopener">https://infogr.am/app/#/library</a><br>文字云：<a href="https://wordart.com/" target="_blank" rel="noopener">https://wordart.com/</a></p><p>其他不列举了，还有很多其他的网站，更偏向于Designer所需要的。毕竟数据分析中呈现数据趋势，数据异常，洞察这些等实质性内容更多于美的展示。</p><p>之前会觉得发布会那种图表会非常绚烂，后来发现日常PPT图表或者Excel中更追求简洁明了直指实质，当然PPT中用一些图表小技巧还是会显得专业和美感。</p><p>也可以用Power BI或者Tableau，之前也有使用过，发现Excel和PPT基本满足需求之后，也没有深入学习。最近准备学一学Tableau，因为发现有些招聘中有这个要求。。</p><p>配色/图形搭配这些需平时积累，有个小建议，比如上Behance/花瓣网/站酷这些设计网站找到喜欢的图片设计，从图片里取色。当然很多公司都会有自己的主色调，从logo或者官网取色不会错的。</p><p>略显匆促，补充或者建议还请留言。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚毕业开始工作的同事对excel小技巧还存在比较强烈的好奇，想起当初刚刚毕业的时候也曾东找西找教程，每天早半小时到公司，先看两个excel公众号推送学习，找一些小视频课的时候。她比较羞涩，似乎很担心打扰到别人。也出于渐渐淡忘这些，所以今天准备把一些常用的功能列举下来，让她更有方向点。同时也希望她今后可以更加大胆的说出自己的想法。&lt;/p&gt;
&lt;p&gt;我把excel的使用分成几部分&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;快捷按键/自带功能&lt;/li&gt;
&lt;li&gt;函数&lt;/li&gt;
&lt;li&gt;数据透视表&lt;/li&gt;
&lt;li&gt;数据可视化&lt;/li&gt;
&lt;li&gt;VBA（初学可先略过）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据透视表已经整理过了，这里略过不提&lt;/p&gt;
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="Excel" scheme="http://yoursite.com/tags/Excel/"/>
    
  </entry>
  
  <entry>
    <title>HTML 相关常用汇总</title>
    <link href="http://yoursite.com/2018/09/14/2018/HTML%20and%20CSS/"/>
    <id>http://yoursite.com/2018/09/14/2018/HTML and CSS/</id>
    <published>2018-09-13T16:00:00.000Z</published>
    <updated>2018-11-10T06:54:35.749Z</updated>
    
    <content type="html"><![CDATA[<p>Home<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;!-- 插入外部样式表 --&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt; </span><br><span class="line">&lt;title&gt;title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;啦啦啦&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;我是卖报的小行家&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><a id="more"></a><h4 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h4><p><strong> 标题 </strong></p><p></p><h1>一级标题</h1><p></p><p></p><h2>二级标题</h2><p></p><p></p><h3>三级标题</h3><p></p><p></p><h4>四级标题</h4><p></p><p></p><h5>五级标题</h5><p></p><p></p><h6>六级标题</h6><p></p><p><hr>创建水平线，分割内容<br><!--  注释  --></p><p><strong> 段落 </strong></p><p></p><p>段落</p><br><br>折行<p></p><p><strong> 链接 </strong><br><a href="https://liheyuting.github.io/" target="_blank">This is my blog</a></p><p>target=”_blank” 在新窗口打开文档</p><p><a name="label">锚</a> #也可以用id属性替代MAME属性<br>建立锚了，可以在其他地方创建指向这个锚的链接</p><ul><li><p>同一页面<br><a href="#lable">xxxx</a></p></li><li><p>其他页面<br><a href="https://liheyuting.github.io/html/html_links.asp#label" target="_blank" rel="noopener">xxxxx</a><br>(Q这个链接是怎么确定的呢)</p></li></ul><p><strong> 图片 </strong><br><img src="dora.jpg" alt="https://liheyuting.github.io/" width="" height=""></p><ul><li><p>背景图片<br>&lt;body background=”//“</p></li><li><p>排列图片<br>&lt;img src=”” align=”botton(/middle/top)”</p></li><li><p>浮动图片<br>&lt;img src=”//“ align=”left(/fight)”</p></li><li><p>增加图片链接<br>在<img> 前后加上<br><a href="https://liheyuting.github.io/html" target="_blank" rel="noopener"><br></a></p></li></ul><p><strong> 按钮 </strong></p><botton>click</botton><p><strong> 列表 </strong></p><ul> #unorder list 无序列表<br>    <li>a</li><br>    <li>b</li><br></ul><p><ol> #order list 有序列表</ol></p><ul><li>定义列表<br><dl><br><dt>1111</dt><br><dd>2222</dd><br><dt>3333</dt><br><dd>4444</dd><br>定义列表的列表项内部可以使用段落、换行符、图片、链接以及其他列表等<br>（Q这个不是太明白）</dl></li></ul><p>dl 定义定义列表<br>dt 定义定义项目<br>dd 定义定义的描述</p><ul><li>嵌套列表<br>多加几层</li></ul><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><p>class 规定元素的类名<br>id 元素的唯一id<br>style inline style 行内样式<br>title 规定元素的额外信息</p><p><strong> 文本标签 </strong><br><b> 粗体</b></p><p><big> 大号字<br><em> 着重文字<br><i> 斜体<br><small> 小号字<br><strong> 加重语气<br><sub> 定义下标字<br><sup> 定义上标字<br><ins> 增加下划线<br><del> 增加删除线</del></ins></sup></sub></strong></small></i></em></big></p><p><strong> 引用 </strong><br><q> 短引用</q></p><p><blockquote> 长引用<br><abbr> 定义缩写<br><dfn> 定义项目或缩写的定义</dfn></abbr></blockquote></p><p><address> 定义文档或文章的联系方式/作者(通常斜体显示，大多数浏览器在此元素前后折行)<br><cite> 定义著作的标题（斜体显示）</cite></address></p><p><strong> 表格 </strong></p><ul><li>表格<br><table border="1"><tr><br><td> row 1, cell 1</td></tr><br><td> row 1, cell 2<br></td></table></li></ul><p><tr></tr></p><td> row 2, cell 1<br></td><td> row 2, cell 2<br><br><br><br>#table 定义表格<br>#tr 若干行<br>#td table data 表格数据<br><br>- 边框属性<br>border<br><br>- 表头<br><th>heading</th><br>#th table heading<br><br>- 空单元格<br></td><td>&nbsp;</td><ul><li>跨行跨列<br>colspan<br>eg <th colspan="2"></th></li></ul><p>rowspan<br>eg <th rowspan="2"></th></p><ul><li><p>表格内的标签<br>（比如实现图片一块块）</p></li><li><p>单元格边距（cell padding）</p><table cellpadding="10"></table></li><li><p>单元格间距（cell spacing）</p><table cellspacing="10"></table></li><li><p>背景颜色或图片<br><table bgcolor="blue"></table><br>or (background=’//‘)</p></li><li><p>表格内排列内容对齐<br>align=”left(/right)”</p></li><li><p>frame 外框<br>frame=””<br>box 四面铁框<br>above 头顶有框<br>below 脚下有框<br>hsides 上头下头被框<br>vsides 两边有框</p></li></ul><h4 id="块、类、布局等其他"><a href="#块、类、布局等其他" class="headerlink" title="块、类、布局等其他"></a>块、类、布局等其他</h4><p><strong> 块 </strong></p><p><div> 在CSS里设置样式属性<br>可用于文档布局</div></p><p><span> 为部分文本设置样式属性</span></p><p><strong> 类 </strong><br>类-块-行<br>（Q这块有点疑问，id, name, class相关）</p><p><strong> 布局 </strong></p><ul><li>header 页眉</li><li>nav 导航链接的容器</li><li>section 定义文档中的节</li><li>article 定义独立的自包含文章</li><li>aside 定义内容之外的内容（比如侧栏）</li><li>footer 定义文档或节的页脚</li><li>details 定义额外的细节</li><li>summary 定义details 元素的标题</li></ul><p>（detail/article/summary Q下次注意下）</p><p><strong> 响应式web设计 </strong><br>（Q虽然你现在还不懂，最好要有印象，以后再回头看）</p><p>RWD响应式web设计（responsive web design）</p><ul><li><p>自己创建<br>在head中<style>中设置</p></li><li><p>Bootstrap<br>（Q之后学）<br>使用现成的CSS框架<br>在head中加入：<br><meta charset="utf-8"><br><meta name="viewport" content="width=device-width, initial-scale=1"></p><link rel="stylesheet" href="////"></li></ul><p><strong> 内联框架 </strong><br>  <iframe src="//"(width="" height="" frameborder="0")></iframe></p><ul><li>作为连接的目标时<br>加入name属性<br>name=””</li></ul><p><strong> 脚本 </strong><br>(Q之后学)</p><p>”假设6个月之后的你在教现在的你学习“<br>”强迫输出促进输入“</p><p>整理过程是一个复习的过程，虽然离现在实质工作内容相差千万，还应起项目直接实操才好。<br>稍加整理，如有错误或者其他的建议，还请不吝赐教，万分感谢。</p></style></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Home&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 插入外部样式表 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;style.css&amp;quot;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;title&amp;gt;title&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;h1&amp;gt;啦啦啦&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p&amp;gt;我是卖报的小行家&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>VBS</title>
    <link href="http://yoursite.com/2018/09/14/2018/VB/"/>
    <id>http://yoursite.com/2018/09/14/2018/VB/</id>
    <published>2018-09-13T16:00:00.000Z</published>
    <updated>2018-11-10T07:05:57.957Z</updated>
    
    <content type="html"><![CDATA[<p>在HTML中放置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script  type=&quot;text/vbscript&quot;&gt;</span><br><span class="line">document.write(&quot;hello from VBScirpt&quot;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p><p>在Head部分的脚本：当脚本被调用时，它们就会被执行，或者某个事件被触发，脚本也有可能被触发。当脚本被放置在head，就可以确保用户在使用前已经被载入</p><p>在body部分：当页面body部分被载入时，脚本就会被执行。当我们把脚本放置在body部分，它会生成页面的内容。</p><h4 id="变量-（始于被声明，死于页面被关闭）"><a href="#变量-（始于被声明，死于页面被关闭）" class="headerlink" title="变量 ####（始于被声明，死于页面被关闭）"></a>变量 ####（始于被声明，死于页面被关闭）</h4><p>option explicit<br>dim name<br>name = values</p><p>创建了一个变量name<br><a id="more"></a><br><strong> 数组 </strong><br>dim names(2)       #包含了3个元素[0,1,2]<br>dim person(2,4)    #二维数组</p><h4 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h4><p><strong> 子程序 </strong>：封装在Sub和End Sub语句内；执行操作，不会返回值；可带有通过程序调用向子程序传递参数</p><p>sub mysub()<br>    some statements<br>End Sub</p><p><strong> 函数程序 </strong>：封装在function和End Function语句内；可执行操作并返回值<br>Function myfunction()<br>    some stetements<br>    myfunction = some values<br>End Function</p><p><strong> 调用函数时 </strong><br>name = findname()<br>或者<br>msgbox”your name” &amp; findname()</p><p><strong> 调用子程序时 </strong><br>Call MyProc(argument)<br>或<br>MyProc argument</p><h4 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h4><p>if<br>if…then..else<br>if…then..elseif<br>select case(case Else)</p><p>end if </p><h4 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h4><p>For Next<br>For Each…Next<br>Do…Loop<br>While…Wend</p><p>step 1/-1</p><p>小学学过一段时间的VBS，长大后再回顾没有一点熟悉地方，这个好像直接植入到HTML中。小时候另存为“.vbs”的一个小运行程序。哈哈还记得当时老师培训时，还偷偷开了好几个梦幻西游的账号。。有次直接被老师抓住。当时学习网页制作时，模糊记得好像是有个程序，我们只要了解布局与样式，将元素放到后台，前台就会显示出来。</p><p>现在想起来，有些恍惚又美好的感觉，小伙伴们不知道怎样了，那时微雨蒙蒙的好天气也只能留在回忆长廊了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在HTML中放置&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;script  type=&amp;quot;text/vbscript&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	document.write(&amp;quot;hello from VBScirpt&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在Head部分的脚本：当脚本被调用时，它们就会被执行，或者某个事件被触发，脚本也有可能被触发。当脚本被放置在head，就可以确保用户在使用前已经被载入&lt;/p&gt;
&lt;p&gt;在body部分：当页面body部分被载入时，脚本就会被执行。当我们把脚本放置在body部分，它会生成页面的内容。&lt;/p&gt;
&lt;h4 id=&quot;变量-（始于被声明，死于页面被关闭）&quot;&gt;&lt;a href=&quot;#变量-（始于被声明，死于页面被关闭）&quot; class=&quot;headerlink&quot; title=&quot;变量 ####（始于被声明，死于页面被关闭）&quot;&gt;&lt;/a&gt;变量 ####（始于被声明，死于页面被关闭）&lt;/h4&gt;&lt;p&gt;option explicit&lt;br&gt;dim name&lt;br&gt;name = values&lt;/p&gt;
&lt;p&gt;创建了一个变量name&lt;br&gt;
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="VBS" scheme="http://yoursite.com/tags/VBS/"/>
    
  </entry>
  
  <entry>
    <title>连接Python和MySQL</title>
    <link href="http://yoursite.com/2018/08/30/2018/connectpythonsql/"/>
    <id>http://yoursite.com/2018/08/30/2018/connectpythonsql/</id>
    <published>2018-08-29T16:00:00.000Z</published>
    <updated>2018-09-02T08:09:44.756Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装“MySQL-Connector“"><a href="#安装“MySQL-Connector“" class="headerlink" title="安装“MySQL Connector“"></a>安装“MySQL Connector“</h3><p><code>pip install mysql-connector</code></p><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import mysql.connector</span><br><span class="line"></span><br><span class="line">mydb = mysql.connector.connect(</span><br><span class="line">    host = &quot;localhost&quot;,</span><br><span class="line">    user = &quot;username&quot;,</span><br><span class="line">    passwd = &quot;password&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">print(mydb)</span><br></pre></td></tr></table></figure><h3 id="创建一个database"><a href="#创建一个database" class="headerlink" title="创建一个database"></a>创建一个database</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import mysql.connector</span><br><span class="line"></span><br><span class="line">mydb = mysql.connector.connect(</span><br><span class="line">    host = &quot;localhost&quot;,</span><br><span class="line">    user = &quot;username&quot;,</span><br><span class="line">    passwd = &quot;password&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">mycursor = mydb.cursor()</span><br><span class="line"></span><br><span class="line">mycursor.execute(&quot;CREATE DATABASE mydatabase&quot;)</span><br><span class="line"></span><br><span class="line">#check</span><br><span class="line"></span><br><span class="line">for x in mycursor:</span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure><a id="more"></a><p>#连接时access the database </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import mysql.connector.connect(</span><br><span class="line">    host = &quot;localhost&quot;,</span><br><span class="line">    user = &quot;username&quot;,</span><br><span class="line">    passwd = &quot;password&quot;,</span><br><span class="line">    database = &quot;mydatabase&quot;</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><h3 id="创建一个table"><a href="#创建一个table" class="headerlink" title="创建一个table"></a>创建一个table</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import mysql.connector</span><br><span class="line"></span><br><span class="line">mydb = mysql.connector.connect(</span><br><span class="line">    host = &quot;localhost&quot;,</span><br><span class="line">    user = &quot;username&quot;,</span><br><span class="line">    passwd = &quot;password&quot;,</span><br><span class="line">    database = &quot;mydatabase&quot;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">mycursor = mydb.cursor()</span><br><span class="line"></span><br><span class="line">mycursor.execte(&quot;CREATE TABLE persons(</span><br><span class="line">name varchar(225),</span><br><span class="line">age varchar(255)</span><br><span class="line">)&quot;)</span><br></pre></td></tr></table></figure><p>#check<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for x in mycursor: </span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure></p><h3 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">mycursor = mydb.cursor()</span><br><span class="line"></span><br><span class="line">sql = &quot;INSERT INTO persons(name, age)</span><br><span class="line">VALUES (%s, %s)&quot;</span><br><span class="line">val = (&quot;Dora&quot;, &quot;18&quot;)</span><br><span class="line">mycursor.execute(sql, val)</span><br></pre></td></tr></table></figure><p><strong> mydb.commit() </strong> #make the changes</p><p>print(mycursor.rowcount, “record inserted.”)</p><p>#多行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">... </span><br><span class="line">val = [</span><br><span class="line">    (&apos;Peter&apos;, &apos;3&apos;),</span><br><span class="line">    (&apos;Amy&apos;, &apos;5&apos;),</span><br><span class="line">    (&apos;lala&apos;, &apos;6&apos;)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">mycursor.executemany(sql, val)</span><br><span class="line"></span><br><span class="line">mydb.commit()</span><br><span class="line"></span><br><span class="line">print(mycursor.rowcount, &quot;was inserted&quot;)</span><br></pre></td></tr></table></figure></p><p>#返回插入ID<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">print(&quot;1 record inserted, ID:&quot;, mycursor.lastrowid)</span><br></pre></td></tr></table></figure></p><h3 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">mycursor = mydb.cursor()</span><br><span class="line"></span><br><span class="line">mycursor.execute(&quot;SELECT * FROM persons&quot;)</span><br><span class="line"></span><br><span class="line">myresult = mycursor.fetchall()</span><br><span class="line"></span><br><span class="line">for x in myresult:</span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure><p>fetchall: 从上个执行动作中获取所有行<br>fetchone: 提取结果第一行</p><p>SELECT 语句相似替换</p><p>#防止SQL注入，转义<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">sql = &quot;SELECT * FROM persons WHERE age = %s&quot;</span><br><span class="line">adr = (&quot;5&quot;, )</span><br><span class="line"></span><br><span class="line">mycursor.execute(sql, adr)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装“MySQL-Connector“&quot;&gt;&lt;a href=&quot;#安装“MySQL-Connector“&quot; class=&quot;headerlink&quot; title=&quot;安装“MySQL Connector“&quot;&gt;&lt;/a&gt;安装“MySQL Connector“&lt;/h3&gt;&lt;p&gt;&lt;code&gt;pip install mysql-connector&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;连接数据库&quot;&gt;&lt;a href=&quot;#连接数据库&quot; class=&quot;headerlink&quot; title=&quot;连接数据库&quot;&gt;&lt;/a&gt;连接数据库&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import mysql.connector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mydb = mysql.connector.connect(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    host = &amp;quot;localhost&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user = &amp;quot;username&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    passwd = &amp;quot;password&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(mydb)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建一个database&quot;&gt;&lt;a href=&quot;#创建一个database&quot; class=&quot;headerlink&quot; title=&quot;创建一个database&quot;&gt;&lt;/a&gt;创建一个database&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import mysql.connector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mydb = mysql.connector.connect(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    host = &amp;quot;localhost&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user = &amp;quot;username&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    passwd = &amp;quot;password&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mycursor = mydb.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mycursor.execute(&amp;quot;CREATE DATABASE mydatabase&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#check&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for x in mycursor:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(x)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>SQL常用函数</title>
    <link href="http://yoursite.com/2018/08/29/2018/SQL2/"/>
    <id>http://yoursite.com/2018/08/29/2018/SQL2/</id>
    <published>2018-08-28T16:00:00.000Z</published>
    <updated>2018-09-02T07:47:20.611Z</updated>
    
    <content type="html"><![CDATA[<ul><li>AVG: 平均数</li></ul><ol><li>直接在SELECT里使用</li><li>作为条件在WHERE中使用</li></ol><ul><li>COUNT: 计数</li></ul><ol><li>COUNT(*)</li><li>COUNT(指定列)</li></ol><ul><li>FIRST: 第一个记录的值</li><li><p>LAST</p></li><li><p>MAX: 最大数</p></li><li><p>MIN: 最小数</p></li><li><p>SUM: 数值总计</p></li><li><p>GROUP BY: 根据某字段，分组汇总，可多个字段</p><a id="more"></a></li><li><p>HAVING: 给分组设置条件</p></li><li><p>UCASE/UPPER: 转换为大写，想upper</p></li><li><p>LCASE/LOWER: 转换为小写，想lower</p></li><li><p>MID(列名，1, 3): 从中间取数，对应Excel函数，（哪列数据，第几个开始取，取几个）</p></li><li><p>LEN: 获取文本长度，对应Excel</p></li><li><p>ROUND（列名, 2): 指定小数位数，(列名, 几位小数)</p></li><li><p>NOW: 当前日期和时间</p></li><li><p>FORMAT: 对字段显示格式化，比如时间</p></li><li><p>RAND: 取随机数</p></li><li><p>ABS: 取绝对值</p></li><li><p>CEILING: 大于其的最小整数值</p></li><li><p>IFNULL: null的判断</p></li><li><p>TRIM: 去除字符串首尾空格</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;AVG: 平均数&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;直接在SELECT里使用&lt;/li&gt;
&lt;li&gt;作为条件在WHERE中使用&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;COUNT: 计数&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;COUNT(*)&lt;/li&gt;
&lt;li&gt;COUNT(指定列)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;FIRST: 第一个记录的值&lt;/li&gt;
&lt;li&gt;&lt;p&gt;LAST&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MAX: 最大数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MIN: 最小数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SUM: 数值总计&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GROUP BY: 根据某字段，分组汇总，可多个字段&lt;/p&gt;
    
    </summary>
    
    
      <category term="learn" scheme="http://yoursite.com/tags/learn/"/>
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>《一个人的村庄》</title>
    <link href="http://yoursite.com/2018/08/27/2018/read_village/"/>
    <id>http://yoursite.com/2018/08/27/2018/read_village/</id>
    <published>2018-08-26T16:00:00.000Z</published>
    <updated>2018-08-27T15:23:45.703Z</updated>
    
    <content type="html"><![CDATA[<h4 id="鸟语的孤独"><a href="#鸟语的孤独" class="headerlink" title="鸟语的孤独"></a>鸟语的孤独</h4><p>刘亮程在《一个人的村庄》里写到“不知道那只鸟最后找到知音了没有。听过它孤独鸟语的一个人，却从此默默无声。多少年后，这种孤独的声音出现在他的声音里。“</p><p>看到这段话时，我正坐在公交车里，窗两侧的树木和汽车，如模糊后退不断浓缩的影像，渐渐离开视野。不知怎的，眼睛突然就热了，眼泪沿着眼角划下。怆然之感，骤上心头。</p><p>就如同，举目无边的荒原里，有野草，有风声，有淅淅沥沥的雨落在手心，也有墨色苍穹静默，却只能一个人站着，声音出自胸腔，悬落在半空，也许风听到了，野草也摇曳着应和，你却明白，这世界辽阔响亮，却寂然无回声。</p><p>有些庆幸，不是年少时翻看，那时未离家多年，不用想到原来同样的草长在不同的地方，竟会让人有不同的感情，不用体会原来说着话也不曾让人远离孤独。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;鸟语的孤独&quot;&gt;&lt;a href=&quot;#鸟语的孤独&quot; class=&quot;headerlink&quot; title=&quot;鸟语的孤独&quot;&gt;&lt;/a&gt;鸟语的孤独&lt;/h4&gt;&lt;p&gt;刘亮程在《一个人的村庄》里写到“不知道那只鸟最后找到知音了没有。听过它孤独鸟语的一个人，却从此默默无声。多少年后，这
      
    
    </summary>
    
    
      <category term="soft" scheme="http://yoursite.com/tags/soft/"/>
    
      <category term="read" scheme="http://yoursite.com/tags/read/"/>
    
  </entry>
  
</feed>
